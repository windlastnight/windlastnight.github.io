(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{372:function(t,e,a){t.exports=a.p+"assets/img/2019080910022_1.4f880d2c.png"},373:function(t,e,a){t.exports=a.p+"assets/img/2019080910022_2.6ee1f0c8.png"},374:function(t,e,a){t.exports=a.p+"assets/img/mybatis.0c60d09d.png"},487:function(t,e,a){"use strict";a.r(e);var r=a(25),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"configuration加载过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configuration加载过程"}},[t._v("#")]),t._v(" Configuration加载过程")]),t._v(" "),r("p",[t._v("["),r("img",{attrs:{src:a(372),alt:"2019080910022_1.png"}}),t._v("]")]),t._v(" "),r("h2",{attrs:{id:"configuration组成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configuration组成"}},[t._v("#")]),t._v(" Configuration组成")]),t._v(" "),r("ol",[r("li",[t._v("基本属性。在mybatis-config.xml加载的属性这里定义为基本属性。如cacheEnabled/variables/objectFactory等等，这些的加载都比较简单。")]),t._v(" "),r("li",[t._v("cache缓存。这个是从mapper配置文件加载的。一个命名空间对应一个缓存。")]),t._v(" "),r("li",[t._v("resultMap。结果集映射，从mapper配置文件中的resultMap节点加载。")]),t._v(" "),r("li",[t._v("mappedStatement。Sql语句的定义。从mapper配置文件中的select/update/insert/delete节点加载。")])]),t._v(" "),r("p",[t._v("之所以将cache/resultMap/mapperStatement单独分开，是因为我们在配置mybatis中主要使用的就是这三个配置。")]),t._v(" "),r("h2",{attrs:{id:"configuration加载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configuration加载"}},[t._v("#")]),t._v(" Configuration加载")]),t._v(" "),r("ol",[r("li",[t._v("XMLConfigBuilder读取mybatis-config.xml文件，解析内容并加载到configuration中基本属性中。")]),t._v(" "),r("li",[t._v("XMLMapperBuilder读取Mapper配置文件，解析得到配置内容。如果是加载Mapper接口的话由MapperAnnotationBuilder从注解里解析配置内容。")]),t._v(" "),r("li",[t._v("MapperBuilderAssistant利用XMLMapperBulider/XMLAnnotationBuilder解析到的配置构建Cache/ResultMap/MappedStatement对象并加载到Configuration中。")])]),t._v(" "),r("h1",{attrs:{id:"sql执行过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sql执行过程"}},[t._v("#")]),t._v(" SQL执行过程")]),t._v(" "),r("p",[r("img",{attrs:{src:a(373),alt:"2019080910022_2.png"}})]),t._v(" "),r("h2",{attrs:{id:"主要对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主要对象"}},[t._v("#")]),t._v(" 主要对象")]),t._v(" "),r("ol",[r("li",[t._v("Mybatis在SqlSession接口中提供了访问数据库的基本操作。如select/update/insert/delete/commit/rollback/close。SqlSession有一个默认的实现DefaultSqlSession")]),t._v(" "),r("li",[t._v("在DefaultSqlSession中有一个Executor对象，对象数据的操作都是由这个Executor来完成。Executor中有三个对象来帮助他完成MappedStatement的执行工作。")]),t._v(" "),r("li",[t._v("StatementHandler负责从连接中获取一个Statement对象")]),t._v(" "),r("li",[t._v("ParameterHandler负责对Statement设置参数")]),t._v(" "),r("li",[t._v("ResultHandler负责生成查询语句的结果集")])]),t._v(" "),r("h2",{attrs:{id:"主要过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主要过程"}},[t._v("#")]),t._v(" 主要过程")]),t._v(" "),r("ol",[r("li",[t._v("DefaultSqlSession根据id在configuration中找到MappedStatement对象(要执行的语句)")]),t._v(" "),r("li",[t._v("Executor调用MappedStatement对象的getBoundSql得到可执行的sql和参数列表")]),t._v(" "),r("li",[t._v("StatementHandler根据Sql生成一个Statement")]),t._v(" "),r("li",[t._v("ParameterHandler为Statement设置相应的参数")]),t._v(" "),r("li",[t._v("Executor中执行sql语句")]),t._v(" "),r("li",[t._v("如果是更新(update/insert/delete)语句，sql的执行工作得此结束")]),t._v(" "),r("li",[t._v("如果是查询语句，ResultSetHandler再根据执行结果生成ResultMap相应的对象返回。")])]),t._v(" "),r("h2",{attrs:{id:"一张图搞懂mybatis执行过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一张图搞懂mybatis执行过程"}},[t._v("#")]),t._v(" 一张图搞懂mybatis执行过程")]),t._v(" "),r("p",[r("img",{attrs:{src:a(374),alt:"mybatis.png"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);