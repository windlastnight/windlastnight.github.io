(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{469:function(s,t,n){"use strict";n.r(t);var a=n(25),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"架构设计思想"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#架构设计思想"}},[s._v("#")]),s._v(" 架构设计思想：")]),s._v(" "),n("ul",[n("li",[s._v("以增量的方式适应变化：以新写的代码替代之前的代码（例：redistemplate的bean替换）")]),s._v(" "),n("li",[s._v("面对扩展开放，对修改关闭")]),s._v(" "),n("li",[s._v("接口分层封装系统可能发生的变化")]),s._v(" "),n("li",[s._v("以模板方法去除重复的代码，提高健壮性")]),s._v(" "),n("li",[s._v("spring：依赖搜索；用map封装同一类型的多种实现")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("filter:     request \ninterceptor:   request method\naspect:    method params\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("Bean的生命周期")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("postProcessBeforeInitialization  --\x3e@PostConstruct --\x3epostProcessAfterInitialization \n--\x3e\nsetApplicationContext --\x3eafterPropertiesSet --\x3e自定义initMethod方法--\x3e\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("@PostConstruct\n注释的方法，会在构造方法之后，init方法之前进行调用。\n只有一个方法可以使用此注释进行注解；\n被注解方法不得有任何参数；\n被注解方法返回值为void；\n被注解方法不得抛出已检查异常；\n被注解方法需是非静态方法；\n此方法只会被执行一次；")]),s._v(" "),n("p",[s._v("SELECT a.* FROM 表 1 a, (select id from 表 1 where 条件 LIMIT 100000,20 ) b where a.id=b.id\n关于获取部分记录的原则：\n第一步：获取符合条件的记录ID集，做这一步的原因是表的主键索引是直接保存在内容中，速度极快，\n第二步：再按ID IN 的方式，获取结果集。")]),s._v(" "),n("p",[s._v("字面量：字面量就是指由字母、数字等构成的字符串或者数值。并且只能以右值出现。\n符号引用：主要包括了以下三类常量：\n类和接口的全限定名\n字段的名称和描述符\n方法的名称和描述符\n如：com/hollis/HelloWorld、main、([Ljava/lang/String;)V")]),s._v(" "),n("p",[s._v("Minor GC ，Full GC 触发条件\nMinor GC触发条件：当Eden区满时，触发Minor GC。\nFull GC触发条件：\n（1）调用System.gc时，系统建议执行Full GC，但是不必然执行\n（2）老年代空间不足\n（3）方法去空间不足\n（4）通过Minor GC后进入老年代的平均大小大于老年代的可用内存\n（5）由Eden区、From Space区向To Space区复制时，对象大小大于To Space可用内存，则把该对象转存到老年代，且老年代的可用内存小于该对象大小")]),s._v(" "),n("p",[s._v("tcp三次握手\n1、client发送SYN到server，将状态修改为SYN_SEND，如果server收到请求，则将状态修改为SYN_RCVD，并把该请求放到syns queue队列中。\n2、server回复SYN+ACK给client，如果client收到请求，则将状态修改为ESTABLISHED，并发送ACK给server。\n3、server收到ACK，将状态修改为ESTABLISHED，并把该请求从syns queue中放到accept queue。")]),s._v(" "),n("p",[s._v("AQS核心思想是，如果被请求的共享资源空闲，则将当前请求资源的线程设置为有效的工作线程，并且将共享资源设置为锁定状态。如果被请求的共享资源被占用，那么就需要一套线程阻塞等待以及被唤醒时锁分配的机制，这个机制AQS是用CLH队列锁实现的，即将暂时获取不到锁的线程加入到队列中")]),s._v(" "),n("p",[s._v("https://blog.csdn.net/u013991521/article/details/52781423")]),s._v(" "),n("p",[s._v("https://www.jianshu.com/p/7e0599356880")]),s._v(" "),n("p",[s._v("https://blog.csdn.net/zeb_perfect/article/details/53333606")]),s._v(" "),n("p",[s._v("死锁概念：\n所谓死锁，是指两个或者两个以上线程在执行过程中，因争夺资源而产生互相等待的现象，若无外力作用，他们都将无法推进下去，此时，称系统处于死锁。")]),s._v(" "),n("p",[s._v("死锁产生的四个必要条件：\n（1）互斥条件：进程对所分配的资源进行排它性使用，即在一段时间内某资源只由一个进程占用。如果此时，还有其它的进程请求该资源，则请求者只能等待。\n（2）请求和保持条件：指进程已经保持至少一个资源，但又提出了新的资源请求，但是该资源正在被其他进程占有，此时，请求进程阻塞，但又对自己所获得的资源保持不放。\n（3）不剥夺条件：指进程已经获得的资源，在没有使用完之前，不能被剥夺，只能由该进程使用完后自己释放。\n（4）环路等待条件：指在发生死锁时，必然存在一个进程资源的环形链，即进程集合{p0、p1、p2、p3、…pn}中的p0正在等待一个p1占用的资源，pn正在等待一个p0占用的资源。")]),s._v(" "),n("h2",{attrs:{id:"避免死锁的解决办法主要有-1-死锁预防-破坏导致死锁必要条件中的任何一个就可以预防死锁。例如-要求用户申请资源时一次性申请所需要的全部资源-这就破坏了保持和等待条件。将资源分层-得到上一层资源后-才能够申请下一层资源-它破坏了-环路等待条件。-2-死锁避免-避免是指进程在每次申请资源时判断这些操作是否安全。例如-使用银行家算法。-3-死锁检测-死锁预防和避免都是事前措施-而死锁的检测则是判断系统是否处于死锁状态-如果是-则执行死锁解除策略。-4-死锁解除-与死锁检测结合使用。它使用的方式就是剥夺。即将某进程所拥有的资源强行收回-分配给其他的进程。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#避免死锁的解决办法主要有-1-死锁预防-破坏导致死锁必要条件中的任何一个就可以预防死锁。例如-要求用户申请资源时一次性申请所需要的全部资源-这就破坏了保持和等待条件。将资源分层-得到上一层资源后-才能够申请下一层资源-它破坏了-环路等待条件。-2-死锁避免-避免是指进程在每次申请资源时判断这些操作是否安全。例如-使用银行家算法。-3-死锁检测-死锁预防和避免都是事前措施-而死锁的检测则是判断系统是否处于死锁状态-如果是-则执行死锁解除策略。-4-死锁解除-与死锁检测结合使用。它使用的方式就是剥夺。即将某进程所拥有的资源强行收回-分配给其他的进程。"}},[s._v("#")]),s._v(" 避免死锁的解决办法主要有：\n（1）死锁预防：破坏导致死锁必要条件中的任何一个就可以预防死锁。例如，要求用户申请资源时一次性申请所需要的全部资源，这就破坏了保持和等待条件。将资源分层，得到上一层资源后，才能够申请下一层资源，它破坏了 环路等待条件。\n（2）死锁避免：避免是指进程在每次申请资源时判断这些操作是否安全。例如，使用银行家算法。\n（3）死锁检测：死锁预防和避免都是事前措施，而死锁的检测则是判断系统是否处于死锁状态，如果是，则执行死锁解除策略。\n（4）死锁解除：与死锁检测结合使用。它使用的方式就是剥夺。即将某进程所拥有的资源强行收回，分配给其他的进程。")]),s._v(" "),n("p",[s._v("java中class.forName()和classLoader都可用来对类进行加载。\nclass.forName()前者除了将类的.class文件加载到jvm中之外，还会对类进行解释，执行类中的static块。\n而classLoader只干一件事情，就是将.class文件加载到jvm中，不会执行static中的内容,只有在newInstance才会去执行static块。")]),s._v(" "),n("p",[s._v("3.1类的加载过程：\n当使用java命令运行java程序时，此时JVM启动，并去方法区下找java命令后面跟的类是否存在，如果不存在，则把类加载到方法区下\n在类加载到方法区时，会分为两部分：先加载非静态内容到方法区下的非静态区域内，再加载静态内容到方法区下的静态区域内\n当非静态内容载完成之后，就会加载所有的静态内容到方法区下的静态区域内\n3.1  先把所有的静态内容加载到静态区域下\n3.2  所有静态内容加载完之后，对所有的静态成员变量进行默认初始化\n3.3  当所有的静态成员变量默认初始化完成之后，再对所有的静态成员变量显式初始化\n4，当所有的静态成员变量显式初始化完成之后，JVM自动执行静态代码块（静态代码块在栈中执行）[如果有多个静态代码，执行的顺序是按照代码书写的先后顺序执行]\n5，所有的静态代码块执行完成之后，此时类的加载完成\n3.2对象的创建过程：\n当在main方法中创建对象时，JVM会先去方法区下找有没有所创建对象的类存在，有就可以创建对象了，没有则把该类加载到方法区\n在创建类的对象时，首先会先去堆内存中开辟一块空间，开辟完后分配该空间(指定地址)\n当空间分配完后，加载对象中所有的非静态成员变量到该空间下\n所有的非静态成员变量加载完成之后，对所有的非静态成员进行默认初始化\n所有的非静态成员默认初始化完成之后，调用相应的构造方法到栈中\n在栈中执行构造函数时，先执行隐式，再执行构造方法中书写的代码\n6.1  构造方法中的隐式：\n第一步：执行super()语句      调用父类的没有参数的构造方法\n第二步：对所有的非静态成员变量进行显式初始化（在定义成员变量时后面有赋值）\n第三步：所有的非静态成员变量显式初始化完成之后，执行构造代码块\nPs.第二步第三步按照书写顺序执行\n6.2 最后执行构造方法中书写的代码\n当整个构造方法全部执行完，此对象创建完成，并把堆内存中分配的空间地址赋给对象名（此时对象名就指向了该空间）")]),s._v(" "),n("p",[s._v("类加载过程\n加载：根据查找路径找到相应的 class 文件然后导入；")]),s._v(" "),n("p",[s._v("验证：检查加载的 class 文件的正确性；")]),s._v(" "),n("p",[s._v("准备：给类中的静态变量分配内存空间；")]),s._v(" "),n("p",[s._v("解析：虚拟机将常量池中的符号引用替换成直接引用的过程。符号引用就理解为一个标示，而在直接引用直接指向内存中的地址；")]),s._v(" "),n("p",[s._v("初始化：对静态变量和静态代码块执行初始化工作。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("QuickSort")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" arr "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("quickSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * @param arr        待排序列\n     * @param leftIndex  待排序列起始位置\n     * @param rightIndex 待排序列结束位置\n     */")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("quickSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" leftIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" rightIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("leftIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" rightIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" left "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" leftIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" right "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rightIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//待排序的第一个元素作为基准值")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" key "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从左右两边交替扫描，直到left = right")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("right "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" left "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从右往左扫描，找到第一个比基准值小的元素")]),s._v("\n                right"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//找到这种元素将arr[right]放入arr[left]中")]),s._v("\n            arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("left "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" right "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从左往右扫描，找到第一个比基准值大的元素")]),s._v("\n                left"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//找到这种元素将arr[left]放入arr[right]中")]),s._v("\n            arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("right"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//基准值归位")]),s._v("\n        arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对基准值左边的元素进行递归排序")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("quickSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" leftIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" left "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对基准值右边的元素进行递归排序。")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("quickSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" right "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" rightIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);