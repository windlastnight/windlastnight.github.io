(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{371:function(s,t,a){s.exports=a.p+"assets/img/bean.8f8cdc24.jpg"},484:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"spring-bean的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-bean的生命周期"}},[s._v("#")]),s._v(" Spring Bean的生命周期")]),s._v(" "),n("h3",{attrs:{id:""}},[n("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),n("p",[s._v("是的，Spring Bean的生命周期只有这四个阶段。把这四个阶段和每个阶段对应的扩展点糅合在一起虽然没有问题，但是这样非常凌乱，难以记忆。要彻底搞清楚Spring的生命周期，首先要把这四个阶段牢牢记住。实例化和属性赋值对应构造方法和setter方法的注入，初始化和销毁是用户能自定义扩展的两个阶段。在这四步之间穿插的各种扩展点，稍后会讲。")]),s._v(" "),n("ol",[n("li",[s._v("实例化 Instantiation")]),s._v(" "),n("li",[s._v("属性赋值 Populate")]),s._v(" "),n("li",[s._v("初始化 Initialization")]),s._v(" "),n("li",[s._v("销毁 Destruction")])]),s._v(" "),n("p",[s._v("实例化 -> 属性赋值 -> 初始化 -> 销毁")]),s._v(" "),n("p",[s._v("主要逻辑都在doCreate()方法中，逻辑很清晰，就是顺序调用以下三个方法，这三个方法与三个生命周期阶段一一对应，非常重要，在后续扩展接口分析中也会涉及。")]),s._v(" "),n("ol",[n("li",[s._v("createBeanInstance() -> 实例化")]),s._v(" "),n("li",[s._v("populateBean() -> 属性赋值")]),s._v(" "),n("li",[s._v("initializeBean() -> 初始化")])]),s._v(" "),n("p",[s._v("源码如下，能证明实例化，属性赋值和初始化这三个生命周期的存在。关于本文的Spring源码都将忽略无关部分，便于理解：")]),s._v(" "),n("div",{staticClass:"language-dart line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dart"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 忽略了无关代码")]),s._v("\nprotected Object "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doCreateBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" String beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" RootBeanDefinition mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token metadata symbol"}},[s._v("@Nullable")]),s._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      throws BeanCreationException "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Instantiate the bean.")]),s._v("\n   BeanWrapper instanceWrapper "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instanceWrapper "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 实例化阶段！")]),s._v("\n      instanceWrapper "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createBeanInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Initialize the bean instance.")]),s._v("\n   Object exposedObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 属性赋值阶段！")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("populateBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" instanceWrapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始化阶段！")]),s._v("\n      exposedObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("initializeBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" exposedObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   \n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("至于销毁，是在容器关闭时调用的，详见"),n("code",[s._v("ConfigurableApplicationContext#close()")])]),s._v(" "),n("h3",{attrs:{id:"常用扩展点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用扩展点"}},[s._v("#")]),s._v(" 常用扩展点")]),s._v(" "),n("p",[s._v("Spring生命周期相关的常用扩展点非常多，所以问题不是不知道，而是记不住或者记不牢。其实记不住的根本原因还是不够了解，这里通过源码+分类的方式帮大家记忆。")]),s._v(" "),n("h4",{attrs:{id:"第一大类-影响多个bean的接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一大类-影响多个bean的接口"}},[s._v("#")]),s._v(" 第一大类：影响多个Bean的接口")]),s._v(" "),n("p",[s._v("实现了这些接口的Bean会切入到多个Bean的生命周期中。正因为如此，这些接口的功能非常强大，Spring内部扩展也经常使用这些接口，例如自动注入以及AOP的实现都和他们有关。")]),s._v(" "),n("ul",[n("li",[s._v("BeanPostProcessor")]),s._v(" "),n("li",[s._v("InstantiationAwareBeanPostProcessor")])]),s._v(" "),n("p",[s._v("这两兄弟可能是Spring扩展中"),n("strong",[s._v("最重要")]),s._v("的两个接口！InstantiationAwareBeanPostProcessor作用于"),n("strong",[s._v("实例化")]),s._v("阶段的前后，BeanPostProcessor作用于"),n("strong",[s._v("初始化")]),s._v("阶段的前后。正好和第一、第三个生命周期阶段对应。通过图能更好理解：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(371),alt:"img"}})]),s._v(" "),n("p",[s._v("未命名文件 (1).png")]),s._v(" "),n("p",[s._v("InstantiationAwareBeanPostProcessor实际上继承了BeanPostProcessor接口，严格意义上来看他们不是两兄弟，而是两父子。但是从生命周期角度我们重点关注其特有的对实例化阶段的影响，图中省略了从BeanPostProcessor继承的方法。")]),s._v(" "),n("div",{staticClass:"language-dart line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dart"}},[n("code",[s._v("InstantiationAwareBeanPostProcessor "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BeanPostProcessor")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h5",{attrs:{id:"instantiationawarebeanpostprocessor源码分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#instantiationawarebeanpostprocessor源码分析"}},[s._v("#")]),s._v(" InstantiationAwareBeanPostProcessor源码分析：")]),s._v(" "),n("ul",[n("li",[s._v("postProcessBeforeInstantiation调用点，忽略无关代码：")])]),s._v(" "),n("div",{staticClass:"language-tsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-tsx"}},[n("code",[s._v("@Override\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" Object "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" RootBeanDefinition mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" @Nullable Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            throws BeanCreationException "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Give BeanPostProcessors a chance to return a proxy instead of the target bean instance.")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// postProcessBeforeInstantiation方法调用点，这里就不跟进了，")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有兴趣的同学可以自己看下，就是for循环调用所有的InstantiationAwareBeanPostProcessor")]),s._v("\n            Object bean "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolveBeforeInstantiation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbdToUse"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bean "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 上文提到的doCreateBean方法，可以看到")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// postProcessBeforeInstantiation方法在创建Bean之前调用")]),s._v("\n            Object beanInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doCreateBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbdToUse"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("logger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isTraceEnabled")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                logger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("trace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Finished creating instance of bean \'"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" beanName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\'"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" beanInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("可以看到，postProcessBeforeInstantiation在doCreateBean之前调用，也就是在bean实例化之前调用的，")]),s._v(" "),n("ul",[n("li",[s._v("postProcessAfterInstantiation调用点，忽略无关代码：")]),s._v(" "),n("li",[s._v("英文源码注释解释道该方法的返回值会替换原本的Bean作为代理，这也是Aop等功能实现的关键点。")])]),s._v(" "),n("div",{staticClass:"language-tsx line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-tsx"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("populateBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("String beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" RootBeanDefinition mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" @Nullable BeanWrapper bw")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Give any InstantiationAwareBeanPostProcessors the opportunity to modify the")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// state of the bean before properties are set. This can be used, for example,")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// to support styles of field injection.")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("boolean")]),s._v(" continueWithPropertyPopulation "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// InstantiationAwareBeanPostProcessor#postProcessAfterInstantiation()")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 方法作为属性赋值的前置检查条件，在属性赋值之前执行，能够影响是否进行属性赋值！")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isSynthetic")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasInstantiationAwareBeanPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BeanPostProcessor bp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBeanPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bp "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InstantiationAwareBeanPostProcessor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            InstantiationAwareBeanPostProcessor ibp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("InstantiationAwareBeanPostProcessor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("ibp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("postProcessAfterInstantiation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bw"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getWrappedInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n               continueWithPropertyPopulation "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 忽略后续的属性赋值操作代码")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("可以看到该方法在属性赋值方法内，但是在真正执行赋值操作之前。其返回值为boolean，返回false时可以阻断属性赋值阶段（"),n("code",[s._v("continueWithPropertyPopulation = false;")]),s._v("）。")]),s._v(" "),n("p",[s._v("关于BeanPostProcessor执行阶段的源码穿插在下文Aware接口的调用时机分析中，因为部分Aware功能的就是通过他实现的!只需要先记住BeanPostProcessor在初始化前后调用就可以了。")]),s._v(" "),n("h4",{attrs:{id:"第二大类-只调用一次的接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二大类-只调用一次的接口"}},[s._v("#")]),s._v(" 第二大类：只调用一次的接口")]),s._v(" "),n("p",[s._v("这一大类接口的特点是功能丰富，常用于用户自定义扩展。\n第二大类中又可以分为两类：")]),s._v(" "),n("ol",[n("li",[s._v("Aware类型的接口")]),s._v(" "),n("li",[s._v("生命周期接口")])]),s._v(" "),n("h5",{attrs:{id:"无所不知的aware"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#无所不知的aware"}},[s._v("#")]),s._v(" 无所不知的Aware")]),s._v(" "),n("p",[s._v("Aware类型的接口的作用就是让我们能够拿到Spring容器中的一些资源。基本都能够见名知意，Aware之前的名字就是可以拿到什么资源，例如"),n("code",[s._v("BeanNameAware")]),s._v("可以拿到BeanName，以此类推。调用时机需要注意：所有的Aware方法都是在初始化阶段之前调用的！\nAware接口众多，这里同样通过分类的方式帮助大家记忆。\nAware接口具体可以分为两组，至于为什么这么分，详见下面的源码分析。如下排列顺序同样也是Aware接口的执行顺序，能够见名知意的接口不再解释。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Aware Group1\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ol",[n("li",[s._v("BeanNameAware")]),s._v(" "),n("li",[s._v("BeanClassLoaderAware")]),s._v(" "),n("li",[s._v("BeanFactoryAware")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Aware Group2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ol",[n("li",[s._v("EnvironmentAware")]),s._v(" "),n("li",[s._v("EmbeddedValueResolverAware 这个知道的人可能不多，实现该接口能够获取Spring EL解析器，用户的自定义注解需要支持spel表达式的时候可以使用，非常方便。")]),s._v(" "),n("li",[s._v("ApplicationContextAware(ResourceLoaderAware\\ApplicationEventPublisherAware\\MessageSourceAware) 这几个接口可能让人有点懵，实际上这几个接口可以一起记，其返回值实质上都是当前的ApplicationContext对象，因为ApplicationContext是一个复合接口，如下：")])]),s._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" ApplicationContext extends EnvironmentCapable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ListableBeanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" HierarchicalBeanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        MessageSource"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ApplicationEventPublisher"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ResourcePatternResolver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这里涉及到另一道面试题，ApplicationContext和BeanFactory的区别，可以从ApplicationContext继承的这几个接口入手，除去BeanFactory相关的两个接口就是ApplicationContext独有的功能，这里不详细说明。")]),s._v(" "),n("h5",{attrs:{id:"aware调用时机源码分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#aware调用时机源码分析"}},[s._v("#")]),s._v(" Aware调用时机源码分析")]),s._v(" "),n("p",[s._v("详情如下，忽略了部分无关代码。代码位置就是我们上文提到的initializeBean方法详情，这也说明了Aware都是在初始化阶段之前调用的！")]),s._v(" "),n("div",{staticClass:"language-dart line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dart"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 见名知意，初始化阶段调用的方法")]),s._v("\n    protected Object "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("initializeBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" String beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" Object bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token metadata symbol"}},[s._v("@Nullable")]),s._v(" RootBeanDefinition mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里调用的是Group1中的三个Bean开头的Aware")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("invokeAwareMethods")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        Object wrappedBean "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里调用的是Group2中的几个Aware，")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 而实质上这里就是前面所说的BeanPostProcessor的调用点！")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 也就是说与Group1中的Aware不同，这里是通过BeanPostProcessor（ApplicationContextAwareProcessor）实现的。")]),s._v("\n        wrappedBean "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("applyBeanPostProcessorsBeforeInitialization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("wrappedBean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下文即将介绍的InitializingBean调用点")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("invokeInitMethods")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" wrappedBean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// BeanPostProcessor的另一个调用点")]),s._v("\n        wrappedBean "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("applyBeanPostProcessorsAfterInitialization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("wrappedBean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" wrappedBean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("可以看到并不是所有的Aware接口都使用同样的方式调用。Bean××Aware都是在代码中直接调用的，而ApplicationContext相关的Aware都是通过BeanPostProcessor#postProcessBeforeInitialization()实现的。感兴趣的可以自己看一下ApplicationContextAwareProcessor这个类的源码，就是判断当前创建的Bean是否实现了相关的Aware方法，如果实现了会调用回调方法将资源传递给Bean。\n至于Spring为什么这么实现，应该没什么特殊的考量。也许和Spring的版本升级有关。基于对修改关闭，对扩展开放的原则，Spring对一些新的Aware采用了扩展的方式添加。")]),s._v(" "),n("p",[s._v("BeanPostProcessor的调用时机也能在这里体现，包围住invokeInitMethods方法，也就说明了在初始化阶段的前后执行。")]),s._v(" "),n("p",[s._v("关于Aware接口的执行顺序，其实只需要记住第一组在第二组执行之前就行了。每组中各个Aware方法的调用顺序其实没有必要记，有需要的时候点进源码一看便知。")]),s._v(" "),n("h5",{attrs:{id:"简单的两个生命周期接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简单的两个生命周期接口"}},[s._v("#")]),s._v(" 简单的两个生命周期接口")]),s._v(" "),n("p",[s._v("至于剩下的两个生命周期接口就很简单了，实例化和属性赋值都是Spring帮助我们做的，能够自己实现的有初始化和销毁两个生命周期阶段。")]),s._v(" "),n("ol",[n("li",[s._v("InitializingBean 对应生命周期的初始化阶段，在上面源码的"),n("code",[s._v("invokeInitMethods(beanName, wrappedBean, mbd);")]),s._v("方法中调用。\n有一点需要注意，因为Aware方法都是执行在初始化方法之前，所以可以在初始化方法中放心大胆的使用Aware接口获取的资源，这也是我们自定义扩展Spring的常用方式。\n除了实现InitializingBean接口之外还能通过注解或者xml配置的方式指定初始化方法，至于这几种定义方式的调用顺序其实没有必要记。因为这几个方法对应的都是同一个生命周期，只是实现方式不同，我们一般只采用其中一种方式。")]),s._v(" "),n("li",[s._v("DisposableBean 类似于InitializingBean，对应生命周期的销毁阶段，以ConfigurableApplicationContext#close()方法作为入口，实现是通过循环取所有实现了DisposableBean接口的Bean然后调用其destroy()方法 。感兴趣的可以自行跟一下源码。")])]),s._v(" "),n("h3",{attrs:{id:"扩展阅读-beanpostprocessor-注册时机与执行顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#扩展阅读-beanpostprocessor-注册时机与执行顺序"}},[s._v("#")]),s._v(" 扩展阅读: BeanPostProcessor 注册时机与执行顺序")]),s._v(" "),n("h5",{attrs:{id:"注册时机"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注册时机"}},[s._v("#")]),s._v(" 注册时机")]),s._v(" "),n("p",[s._v("我们知道BeanPostProcessor也会注册为Bean，那么Spring是如何保证BeanPostProcessor在我们的业务Bean之前初始化完成呢？\n请看我们熟悉的refresh()方法的源码，省略部分无关代码：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("refresh")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BeansException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IllegalStateException")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("startupShutdownMonitor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Allows post-processing of the bean factory in context subclasses.")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("postProcessBeanFactory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Invoke factory processors registered as beans in the context.")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("invokeBeanFactoryPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Register bean processors that intercept bean creation.")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所有BeanPostProcesser初始化的调用点")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("registerBeanPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Initialize message source for this context.")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("initMessageSource")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Initialize event multicaster for this context.")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("initApplicationEventMulticaster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Initialize other special beans in specific context subclasses.")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("onRefresh")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Check for listener beans and register them.")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("registerListeners")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Instantiate all remaining (non-lazy-init) singletons.")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所有单例非懒加载Bean的调用点")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("finishBeanFactoryInitialization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Last step: publish corresponding event.")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("finishRefresh")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br")])]),n("p",[s._v("可以看出，Spring是先执行registerBeanPostProcessors()进行BeanPostProcessors的注册，然后再执行finishBeanFactoryInitialization初始化我们的单例非懒加载的Bean。")]),s._v(" "),n("h5",{attrs:{id:"执行顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行顺序"}},[s._v("#")]),s._v(" 执行顺序")]),s._v(" "),n("p",[s._v("BeanPostProcessor有很多个，而且每个BeanPostProcessor都影响多个Bean，其执行顺序至关重要，必须能够控制其执行顺序才行。关于执行顺序这里需要引入两个排序相关的接口：PriorityOrdered、Ordered")]),s._v(" "),n("ul",[n("li",[s._v("PriorityOrdered是一等公民，首先被执行，PriorityOrdered公民之间通过接口返回值排序")]),s._v(" "),n("li",[s._v("Ordered是二等公民，然后执行，Ordered公民之间通过接口返回值排序")]),s._v(" "),n("li",[s._v("都没有实现是三等公民，最后执行")])]),s._v(" "),n("p",[s._v("在以下源码中，可以很清晰的看到Spring注册各种类型BeanPostProcessor的逻辑，根据实现不同排序接口进行分组。优先级高的先加入，优先级低的后加入。")]),s._v(" "),n("div",{staticClass:"language-kotlin line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-kotlin"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// First, invoke the BeanDefinitionRegistryPostProcessors that implement PriorityOrdered.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 首先，加入实现了PriorityOrdered接口的BeanPostProcessors，顺便根据PriorityOrdered排了序")]),s._v("\n            String"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" postProcessorNames "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n                    beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBeanNamesForType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BeanDefinitionRegistryPostProcessor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String ppName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" postProcessorNames"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isTypeMatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ppName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" PriorityOrdered"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ppName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" BeanDefinitionRegistryPostProcessor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    processedBeans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ppName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sortPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            registryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addAll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("invokeBeanDefinitionRegistryPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Next, invoke the BeanDefinitionRegistryPostProcessors that implement Ordered.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 然后，加入实现了Ordered接口的BeanPostProcessors，顺便根据Ordered排了序")]),s._v("\n            postProcessorNames "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBeanNamesForType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BeanDefinitionRegistryPostProcessor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String ppName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" postProcessorNames"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("processedBeans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("contains")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ppName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isTypeMatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ppName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Ordered"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ppName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" BeanDefinitionRegistryPostProcessor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    processedBeans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ppName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sortPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            registryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addAll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("invokeBeanDefinitionRegistryPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Finally, invoke all other BeanDefinitionRegistryPostProcessors until no further ones appear.")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后加入其他常规的BeanPostProcessors")]),s._v("\n            boolean reiterate "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reiterate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                reiterate "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                postProcessorNames "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBeanNamesForType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BeanDefinitionRegistryPostProcessor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("String ppName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" postProcessorNames"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("processedBeans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("contains")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ppName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                        currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ppName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" BeanDefinitionRegistryPostProcessor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("class"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        processedBeans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ppName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        reiterate "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sortPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" beanFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                registryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addAll")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("invokeBeanDefinitionRegistryPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" registry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                currentRegistryProcessors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("p",[s._v("根据排序接口返回值排序，默认升序排序，返回值越低优先级越高。")]),s._v(" "),n("div",{staticClass:"language-dart line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-dart"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * Useful constant for the highest precedence value.\n     * @see java.lang.Integer#MIN_VALUE\n     */")]),s._v("\n    int HIGHEST_PRECEDENCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Integer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MIN_VALUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * Useful constant for the lowest precedence value.\n     * @see java.lang.Integer#MAX_VALUE\n     */")]),s._v("\n    int LOWEST_PRECEDENCE "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Integer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MAX_VALUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("PriorityOrdered、Ordered接口作为Spring整个框架通用的排序接口，在Spring中应用广泛，也是非常重要的接口。")]),s._v(" "),n("h3",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),n("p",[s._v("Spring Bean的生命周期分为"),n("code",[s._v("四个阶段")]),s._v("和"),n("code",[s._v("多个扩展点")]),s._v("。扩展点又可以分为"),n("code",[s._v("影响多个Bean")]),s._v("和"),n("code",[s._v("影响单个Bean")]),s._v("。整理如下：\n四个阶段")]),s._v(" "),n("ul",[n("li",[s._v("实例化 Instantiation")]),s._v(" "),n("li",[s._v("属性赋值 Populate")]),s._v(" "),n("li",[s._v("初始化 Initialization")]),s._v(" "),n("li",[s._v("销毁 Destruction")])]),s._v(" "),n("p",[s._v("多个扩展点")]),s._v(" "),n("ul",[n("li",[s._v("影响多个Bean\n"),n("ul",[n("li",[s._v("BeanPostProcessor")]),s._v(" "),n("li",[s._v("InstantiationAwareBeanPostProcessor")])])]),s._v(" "),n("li",[s._v("影响单个Bean\n"),n("ul",[n("li",[s._v("Aware\n"),n("ul",[n("li",[s._v("Aware Group1\n"),n("ul",[n("li",[s._v("BeanNameAware")]),s._v(" "),n("li",[s._v("BeanClassLoaderAware")]),s._v(" "),n("li",[s._v("BeanFactoryAware")])])]),s._v(" "),n("li",[s._v("Aware Group2\n"),n("ul",[n("li",[s._v("EnvironmentAware")]),s._v(" "),n("li",[s._v("EmbeddedValueResolverAware")]),s._v(" "),n("li",[s._v("ApplicationContextAware(ResourceLoaderAware\\ApplicationEventPublisherAware\\MessageSourceAware)")])])])])]),s._v(" "),n("li",[s._v("生命周期\n"),n("ul",[n("li",[s._v("InitializingBean")]),s._v(" "),n("li",[s._v("DisposableBean")])])])])])]),s._v(" "),n("p",[s._v("至此，Spring Bean的生命周期介绍完毕")])])}),[],!1,null,null,null);t.default=e.exports}}]);